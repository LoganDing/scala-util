package io.wasted.util.test

import io.wasted.util.PooledResource

import org.specs2.mutable._

class PooledResourceSpec extends Specification {

  "Specification for PooledResource.".title

  case class TestMeHard(msg: String)

  val obj = TestMeHard("Default String")
  val pool = new PooledResource(() => obj, 10, 5)

  "Operating on the Pool" should {
    "successfully offering our object #1" in {
      pool.release(obj) must_== ()
    }
    "successfully offering our object #2" in {
      pool.release(obj) must_== ()
    }
    "successfully offering our object #3" in {
      pool.release(obj) must_== ()
    }
    "get an object that was generated by us #1" in {
      pool.get() must_== Some(obj)
    }
    "get an object that was generated by us #2" in {
      pool.get() must_== Some(obj)
    }
    "get an object that was generated by us #3" in {
      pool.get() must_== Some(obj)
    }
    "get the default object which gets generated by default" in {
      pool.get() must_== Some(obj)
    }
  }

}

